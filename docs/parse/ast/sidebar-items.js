initSidebarItems({"enum":[["AstElem","A component of an [`Ast`]: either a label or a leaf."],["AstNode","A node in an (abstract) syntax tree."],["MutNode","A component of an [`Ast`]: either a label or a leaf."],["MutRefNode","A mutably borrowing adapter for [`AstNode`]."],["RefNode","A borrowing adapter for [`AstNode`]."]],"fn":[["reverse","Recursively reverses the order of all the child nodes of an [`Ast`] and of all sub-trees."]],"struct":[["Ast","This is the trait for branch nodes in a (abstract) syntax tree."],["DisplayTree","A wrapper for an [`Ast`] that implements [`Display`] by recursively printing the labels of the branch node and the leaf nodes of its tree"],["IntoIter","An [`Iterator`] over the labels and leaf nodes of an [`Ast`]."],["Iter","An [`Iterator`] by reference over the nodes of an [`Ast`]."],["IterMut","An [`Iterator`] by mutable reference over the labels and leaf nodes of an [`Ast`]."],["WalkerIntoIter","A struct for walking an [`Ast`] while taking ownership of it."],["WalkerIter","A struct for walking an [`Ast`] by reference."],["WalkerIterMut","A struct for walking an [`Ast`] by mutable reference."]],"trait":[["Consumer","A trait for owning walkers."],["Walker","A trait for borrowing walkers."],["WalkerMut","A trait for mutably borrowing walkers."]]});